
package com.iconmaster.iconuscalc.gui;

import com.iconmaster.iconuscalc.manager.IControlManager;
import com.iconmaster.iconuscalc.render.IScreenRenderer;
import java.util.Stack;
import java.awt.Graphics;

/**
 *
 * @author iconmaster
 */
public class MainGuiPanel extends javax.swing.JPanel {
    //private IScreenRenderer renderer;
    private MainGui gui;

    /**
     * Creates new form MainGuiPanel
     */
    public MainGuiPanel(MainGui gui) {
        this.gui = gui;
        initComponents();
        //this.setRenderer(new TextGridRenderer());
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        int w = getWidth();
        int h = getHeight();
        
        Stack<IControlManager> managers = gui.window.getManagers();
        for (IControlManager manager : managers) {
            IScreenRenderer r = manager.getRenderer();
            r.paint(g, w, h);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
